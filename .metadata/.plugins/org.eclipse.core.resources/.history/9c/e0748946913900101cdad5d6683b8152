package org.ms.facture_service.entities;

import lombok.*;
import org.ms.facture_service.model.Client;
import jakarta.persistence.*;
import java.util.Collection;
import java.util.Date;

@Entity
@Data @NoArgsConstructor @AllArgsConstructor @ToString
public class Facture {
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @Temporal(TemporalType.DATE)
    private Date dateFacture;
    private String status; // NON_PAYEE, PARTIELLEMENT_PAYEE, PAYEE
    private Double total;
    private Double resteAPayer; // Added for client-service compatibility
    @OneToMany(mappedBy = "facture", fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    private Collection<FactureLigne> factureLignes;
    @Transient
    private Client client;
    @Column(name = "client_id")
    private Long clientID;

    public Facture(Date dateFacture, String status, Long clientID) {
        this.dateFacture = dateFacture;
        this.status = status;
        this.clientID = clientID;
        this.total = 0.0;
        this.resteAPayer = 0.0;
    }

    @PrePersist @PreUpdate
    public void computeTotal() {
        if (factureLignes != null) {
            this.total = factureLignes.stream()
                    .mapToDouble(fl -> fl.getPrice() * fl.getQuantity())
                    .sum();
            this.resteAPayer = "PAYEE".equals(status) ? 0.0 : total;
        } else {
            this.total = 0.0;
            this.resteAPayer = 0.0;
        }
        if (this.status == null) this.status = "NON_PAYEE";
    }
}